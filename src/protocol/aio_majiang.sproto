.package {
    type 0 : integer
    session 1 : integer
}

heartbeatReq 2 {
        request {
                ts 0 : string
        }
}

heartbeatRes 3 {
        request {
                ts 0 : string
        }
}


.playerData {
        uid 0 : integer
        nickname 1 : string
        sex 2 : integer
        money 3 : integer
        face 4 : integer
        logo 5 : string
        wincount 6 : integer
        losecount 7 : integer
        drawcount 8 : integer
        Pos 9 : integer
		sngScore 10 : integer
}
#data types
.detailsElem {
    pos  0 : integer
    describe  1 : string
    caption 2 : string
}

.pengGang {
    pengType 0 : integer
    from 1 : integer
    card 2 : integer
}

.tipCardData {
    op 0 : integer
    cards 1: *integer 
}

.tingCardNode {
    playCard 0 : integer
    huCards 1 : *integer
    fans 2 : *integer
}

.posMoney {
    pos 0 : integer
    money 1 : integer
}

.pengGangWH {
    pengType 0 : integer
    from 1 : integer
    cards 2 : *integer
}

.knockOutItem {
    uid 0 : integer
    knockout 1 : integer
}

.rankItem {
    score 0 : integer
    name 1 : string
    uid 2 : integer
}
loginReq 101 {
        request {
                uid 0 : string
                token 1 : string
                gameid 2 : string
                nodeid 3 : string
                addtest 4 : string
        }
        response {
                result 0 : integer
                message 1 : string
                secret 2 : string
                serveraddr 3 : string
                nodename 4 : string
                subid 5 : string
                needcutback 6 : boolean   #是否需要掉线重入
                cutbackgroupid 7 : integer   #掉线重入的groupid
        }
}

entergameReq 301 {
        request {
                groupid 0 : integer
        }
}

userreadyReq 302 {
        request {

        }
}

changeRoomReq 303 {
        request {
                
        }
}
#玩家请求站起
userStandupReq 304 {
        request {
                isstandup 0 : integer   #1:站起  0:坐下
        }
}
#玩家聊天请求
gamechatReq 305 {
        request {
                chatrange 0 : integer  #聊天范围 1：room  2:group 3:game 4:all
                chatcontent 1 : string  #聊天内容
        }
}
#玩家离开房间请求

# 进入SNG游戏请求
enterSNGGameReq 306 {
        request {
                groupid 0 : integer
        }
}

# 进入开房模式的房间
enterFangGameReq 307 {
        request {
                groupid 0 : integer
                roompassword 1 : string  #房间密码
        }
}

#玩家操作
onPlayerOperation 501 {
    request {
        OperationSeq 0 : integer #操作序号
        operation 1 : integer   # chu gang peng pass hu 
        card_bytes 2 : integer #加注数量
    }    
} 

# card is data
testMJCardTypeCS 502 {
    request {
        Cards 0 : *integer 
    }
}

#透传消息，主要用于转发api服务器到客户端的主动推送如跑马灯公告，充值结果等
jsonNotify 201 {
        request {
                data 0 : string
        }
}
    
entergameNotify 401 {
        request {
                ret 0 : boolean
                msg 1 : string
        }
}

enterroomRes 402 {
        request {
                ret 0 : boolean
                roomid 1 : integer
                players 2 : *playerData
                maxplayer 3 : integer   #桌子上最大游戏人数
                unitcoin 4 : integer  #桌子的基础分  德州一般为大盲注的金额

        }
}

enterroomNotify 403 {
        request {
                uid 0 : integer
                status 1 : integer   # 参见 Enums.PlayerState
                pos 2 : integer   #用户的座位号
                data 3 : *playerData
        }
}

userreadyNotify 404 {
        request {
                uid 0 : integer
        }        
}

roomstatuNotify 405 {
        request {
                roomid 0 : integer
                status 1 : integer
        }
}

entergameRes 406 {
        request {
              roomid 0 : integer
        }
}

leaveroomNotify 407 {
        request {
              uid 0 : integer
        }
}
#玩家请求站起结果
userStandupRes 408 {
        request {
                ret 0 : boolean
                isstandup 1 : boolean   #请求的值 true:站起  false:坐下
                errormsg 2 : string  #如果ret=false 这里是出错原因
                pos 3 : integer         #如果是坐下操作，坐下成功后此处为座位号
        }
}
#玩家请求站起通知
userStandupNotify 409 {
        request {
                uid 0 : integer
                isstandup 1 : boolean   #true:站起  false:坐下
        }
}
#聊天广播
gamechatNotify 410 {
        request {
                uid 0 : integer   #聊天发起人
                dest 1 : integer  #聊天接受人  为0为所有人
                content 2 : string #聊天内容
        }
}
#用户钱不够了的通知
moneyNotEnoughNotify 411 {
        request {
                moneyCurrency 0 : integer #货币单位  1为金币   2为银子
                showShop 1 : boolean  #是否显示商城
        }
}

#游戏开始通知
gameBeginNotify 412{
        request {
                content 0 : string
        }
}

#游戏开始通知
gameEndNotify 413{
        request {
                content 0 : string
        }
}


#notify player enter game loading
notifyGameLoadingBegin 414 {
    request {
    }
}

notifyGameLoading 415 {
    request {
        waitPlayerNum 0 : integer
        needPlayerNum 1 : integer
    }
}

notifyGameLoadingEnd 416 {
    request {
    }
}

#给玩家发送通知   
playerClientNotify 601 {
    request {
        OperationSeq 0 : integer
        NotifyType 1 : integer
        Params 2 : *integer
    }
}

opHandCardNotify 602 {
    request {
        OperationSeq 0 : integer
        Pos 1 : integer
        Op 2 : integer
        Cards 3 : *integer
    }
}

FlowerCardCountNotify 603 {
    request {
        OperationSeq 0 : integer
        Pos 1 : integer
        Count 2 : integer
    }
}

playerOperationReq 605 {
    request {
        OperationSeq 0 : integer
        Pos 1 : integer
        Op 2 : integer
    }
}

gameResultNotify 607 {
    request {
        OperationSeq 0 : integer
        Caption 1 : integer
    }
}


opOnDeskOutCard 608 {
    request {
        OperationSeq 0 : integer #操作序号
        Op 1 : integer
        Pos 2 : integer 
        Card 3 : integer   
    }
}



addPengCards 610 {
    request {
        OperationSeq 0 : integer #操作序号
        SelfPos 1 : integer #curplayer pos  
        ChuPos 2 : integer  #chuPlayer pos
        Card 3 : integer       
    }
}

gameResult 611 {
    request {
        OperationSeq 0 : integer #操作序号
        flags 1 : integer 
        times 2 : *integer # 保存结算倍数
        money 3 : *integer # 结算后每个玩家的钱数
        score 4 : *integer # 当前尚未使用
        details 5 : *detailsElem # 记录每个玩家hu类型的倍数
        table_titile 6 : string # 尚未使用
        last_out_card 7 : integer 
        winner_times 8 : integer # 尚未使用
        flee_user_name 9 : string # 尚未使用
        game_status_message 10 : string # 尚未使用
        hand_cards1 11 : *integer 
        hand_cards2 12 : *integer
        hand_cards3 13 : *integer 
        hand_cards4 14 : *integer
    }
}
setOperationTipCardsNotify 612 {
    request {
        OperationSeq 0 : integer #操作序号
        Data 1 : *tipCardData
        tingNodes 2 : *tingCardNode
    }
}

addGangCards 614 {
	request {
	    OperationSeq 0 : integer #操作序号
        SelfPos 1 : integer #curplayer pos  
        ChuPos 2 : integer  #chuPlayer pos
        Card 3 : integer
        Coin 4 : integer
	}
}

#onUserCutBack message
notifyEachPlayerCards 615 {
    request {
        OperationSeq 0 : integer #操作序号
        Player1 1 : playerData
        Player2 2 : playerData
        Player3 3 : playerData
        Player4 4 : playerData
        handCards1 5 : *integer
        handCards2 6 : *integer
        handCards3 7 : *integer
        handCards4 8 : *integer
        outCards1 9 : *integer
        outCards2 10 : *integer
        outCards3 11 : *integer
        outCards4 12 : *integer
        pengGang1 13 : *pengGang
        pengGang2 14 : *pengGang
        pengGang3 15 : *pengGang
        pengGang4 16 : *pengGang
        flowerCardsCount1 17 : integer
        flowerCardsCount2 18 : integer
        flowerCardsCount3 19 : integer
        flowerCardsCount4 20 : integer
        zhuangPos 21 : integer
        gameStatus 22 : integer
        myPos 23 : integer
        roundTime 24 : integer
        grabTime 25 : integer
    }
}

opBuHuaHandCardNotify 616 {
    request {
        OperationSeq 0 : integer
        Pos 1 : integer
        Op 2 : integer
        Cards 3 : *integer
    }
}

updatePlayerData 617 {
    request {
        Players 0 : *playerData
    }
}

wallDataCountNotify 618 {
    request {
        OperationSeq 0 : integer
        Num 1 : integer
    }
}

#Res 0 false 1 ok
testMJCardTypeSC 619 {
    request {
        Res 0 : integer
        Cards 1 : *integer
    }
}

fideGangMoney 620 {
    request {
        GangSelfPos 0 : integer 
        GangChuPos 1 : integer 
        Money 2 : integer
    }
}

fideOutCardMoney 621 {
    request {     
        Data 0 : *posMoney
    }
}

huaGangNumNotify 622 {
    request {
        Pos 0 : integer 
        OperationSeq 1 : integer 
        Num 2 : integer
        Money 3 : integer
    }
}

warningNotify 623 {
    request {
        Pos 0 : integer  #player pos
        Type 1 : integer #type in WHMJConst.lua
		MyPos 2 : integer
    }
}

#芜湖麻将使用的消息
addPengCardsWH 624 {
    request {
        OperationSeq 0 : integer #操作序号
        SelfPos 1 : integer #curplayer pos  
        ChuPos 2 : integer  #chuPlayer pos
        Cards 3 : *integer       
    }
}

addGangCardsWH 625 {
    request {
        OperationSeq 0 : integer #操作序号
        SelfPos 1 : integer #curplayer pos  
        ChuPos 2 : integer  #chuPlayer pos
        Cards 3 : *integer
    }
}

#onUserCutBack message
notifyEachPlayerCardsWH 626 {
    request {
        OperationSeq 0 : integer #操作序号
        Player1 1 : playerData
        Player2 2 : playerData
        Player3 3 : playerData
        Player4 4 : playerData
        handCards1 5 : *integer
        handCards2 6 : *integer
        handCards3 7 : *integer
        handCards4 8 : *integer
        outCards1 9 : *integer
        outCards2 10 : *integer
        outCards3 11 : *integer
        outCards4 12 : *integer
        pengGang1 13 : *pengGangWH
        pengGang2 14 : *pengGangWH
        pengGang3 15 : *pengGangWH
        pengGang4 16 : *pengGangWH
        flowerCardsCount1 17 : integer
        flowerCardsCount2 18 : integer
        flowerCardsCount3 19 : integer
        flowerCardsCount4 20 : integer
        zhuangPos 21 : integer
        gameStatus 22 : integer
        myPos 23 : integer
        roundTime 24 : integer
        grabTime 25 : integer
    }
}

addchicards 627 {
    request {
        OperationSeq 0 : integer #操作序号
        SelfPos 1 : integer #curplayer pos  
        ChuPos 2 : integer  #chuPlayer pos
        Card 3 : *integer       
    }
}

ting 628 {
    request {
        OperationSeq 0 : integer #操作序号
        pos 1 : integer #curplayer pos  
        isPrevTing 2 : integer  # 1 ting else prevting
    }
}

tingPos 629 {
    request {
        OperationSeq 0 : integer #操作序号
        posList 1 : *integer #ting  pos
    }
}

#SNG的当前轮次
# final:0 is false 1 is true
sngRound 630 {
    request {
        curTurn 0 : integer
        curRound 1 : integer
        final 2 : integer
    }
}

#SNG是否淘汰
sngKnockOut 631 {
    request {
        knockout 0 : integer
    }
}

#SNG排行
sngRankList 632 {
    request {
        rankList 0 : *rankItem
    }
}

#SNG结束
sngOver 633 {
    request {
    }
}

